/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB         &kp A  &kp S  &kp D             &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp SQT   &kp SLASH
                              &kp LEFT_COMMAND  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CAPS |BTCLR| BT1 | BT2 | BT3 |  BT4|   | LFT | DWN |  UP | RGT | BT5 |  F12 |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp N1             &kp N2           &kp N3          &kp N4            &kp N5        &kp N6    &kp N7    &kp N8     &kp N9     &kp N0   &kp BSPC
&kp TAB    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans   &kp F12
&kp CAPS   &kp F1             &kp F2           &kp F3          &kp F4            &kp F5        &kp F6    &kp F7    &kp F8     &kp F9     &kp F10  &kp F11
                                               &kp LGUI        &trans            &kp SPACE     &kp RET   &trans    &kp LCTRL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp EXCL          &kp AT           &kp HASH         &kp DLLR         &kp PRCNT          &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR       &kp RPAR  &kp LEFT_BRACKET
&kp TAB    &kp LC(UP_ARROW)  &kp LC(LG(Q))    &kp DEL          &trans           &trans             &kp MINUS  &kp EQUAL  &kp SLASH        &kp BACKSLASH  &trans    &kp RIGHT_BRACKET
&kp LSHFT  &rgb_ug RGB_ON    &rgb_ug RGB_OFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC       &kp PIPE  &trans
                                              &kp LGUI         &trans           &kp SPACE          &kp RET    &trans     &kp LCTRL
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&sys_reset   &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                         &trans        &none         &trans          &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bluetooth_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
